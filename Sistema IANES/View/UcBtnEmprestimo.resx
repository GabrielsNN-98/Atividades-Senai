<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        rkJggg==
</value>
  </data>
</root>